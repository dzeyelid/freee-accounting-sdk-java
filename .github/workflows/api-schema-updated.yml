name: API schema updated

on:
  repository_dispatch:
    types:
      - api-schema-updated

env:
  PULL_REQUEST_LABEL: auto-generate
  PULL_REQUEST_BRANCH_NAME: auto-generated

jobs:
  preprocess:
    name: Pre process
    runs-on: ubuntu-latest
    outputs:
      RELEASE_TAG: ${{ steps.run_script.outputs.result.apiSchemaReleaseTag }}
      NEXT_VERSION: ${{ steps.next_release_sdk_version.outputs.next-version }}

    steps:
      - name: Check client_payload
        if: ${{ ! (github.event.client_payload.origin_ref && contains(github.event.client_payload.origin_ref, 'refs/tags/')) }}
        run: |
          echo '::error::Invalid event request'
          exit 1

      - uses: actions/checkout@v2

      - name: Get API schema release tag and current sdk version
        id: run_script
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { origin_ref } = context.payload.client_payload;
            const words = origin_ref.split('/');
            const apiSchemaReleaseTag = words[2];

            const scriptDir = `${process.env.GITHUB_WORKSPACE}/.github/workflows/scripts`;
            const getLatestReleaseVersion = require(`${scriptDir}/get-latest-release-version.js`);
            const currentSdkVersion = await getLatestReleaseVersion({github, context});

            return {apiSchemaReleaseTag, currentSdkVersion};

      - name: Calculate next release version
        id: next_release_sdk_version
        uses: christian-draeger/increment-semantic-version@1.0.2
        with:
          current-version: ${{ fromJson(steps.run_script.outputs.result).currentSdkVersion }}
          version-fragment: 'feature'

  create_pull_request:
    name: Create pull request
    needs:
      - preprocess
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create blank commit
        run: |
          git config user.name "Dispatch receiver"
          git commit --allow-empty -m "Generated by release dipatch tag: ${{ needs.preprocess.outputs.RELEASE_TAG }}"

      - name: Create pull request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN_FOR_PUBLIC_REPO }}
          title: ${{ needs.preprocess.outputs.NEXT_VERSION }}
          body: |
            Generated by release dipatch

            tag: ${{ needs.preprocess.outputs.RELEASE_TAG }}
          labels: ${{ env.PULL_REQUEST_LABEL }}
          branch: ${{ env.PULL_REQUEST_BRANCH_NAME }}
